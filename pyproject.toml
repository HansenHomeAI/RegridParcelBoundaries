[project]
name = "parcelizer"
version = "0.1.0"
description = "Local-first tool for extracting parcel boundaries from maps using AI vision and Regrid API"
authors = [
    {name = "Parcelizer Team"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "openai>=1.0.0",
    "httpx>=0.27.0",
    "pillow>=10.0.0",
    "pytesseract>=0.3.10",
    "shapely>=2.0.0",
    "geopandas>=0.14.0",
    "flask>=3.0.0",
    "python-dotenv>=1.0.0",
    "pandas>=2.0.0",
    "asyncio-compat>=0.1.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-vcr>=1.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
parcelizer = "parcelizer.cli:main"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "W", "F", "I", "N", "UP", "C4", "B", "A", "YTT"]
ignore = []

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=parcelizer --cov-report=html --cov-report=term-missing --cov-fail-under=95"
asyncio_mode = "auto"
